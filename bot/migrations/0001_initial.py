# Generated by Django 5.0 on 2024-02-12 11:37

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DailyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.datetime(2024, 2, 12, 0, 0, 0, 461514, tzinfo=datetime.timezone.utc))),
                ('new_users', models.PositiveIntegerField(default=0)),
                ('traffic', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.CharField(max_length=250)),
                ('file_name', models.CharField(max_length=250)),
                ('file_extension', models.CharField(max_length=5)),
                ('file_path', models.TextField()),
                ('file_size', models.PositiveIntegerField()),
                ('url', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Hard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(max_length=100)),
                ('ftp_u', models.CharField(max_length=250)),
                ('ftp_p', models.CharField(max_length=250)),
                ('space', models.PositiveIntegerField()),
                ('usage', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('new_users', models.PositiveIntegerField(default=0)),
                ('traffic', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=250)),
                ('method', models.CharField(choices=[('CR', 'Cart'), ('BTC', 'Bitcoin'), ('TRX', 'Tron'), ('LTC', 'Litecoin')], max_length=3)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['address', 'is_active'],
                'indexes': [models.Index(fields=['address', 'is_active'], name='bot_address_address_71598e_idx')],
            },
        ),
        migrations.CreateModel(
            name='BotUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.CharField(max_length=250)),
                ('username', models.CharField(max_length=250)),
                ('traffic', models.PositiveIntegerField(default=0)),
                ('wallet', models.PositiveIntegerField(default=0)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['chat_id'],
                'indexes': [models.Index(fields=['chat_id'], name='bot_botuser_chat_id_b3622c_idx')],
            },
        ),
        migrations.CreateModel(
            name='DownloadList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.CharField(max_length=250)),
                ('file', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot.file')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('duration', models.DateField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='bot.botuser')),
            ],
            options={
                'ordering': ['-purchase_date'],
                'indexes': [models.Index(fields=['-purchase_date'], name='bot_subscri_purchas_d6d88a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField()),
                ('currency', models.CharField(choices=[('TM', 'Toman'), ('BTC', 'Bitcoin'), ('TRX', 'Tron'), ('LTC', 'Litecoin')], max_length=3)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('source_address', models.CharField(max_length=250)),
                ('destination_address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='bot.address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='bot.botuser')),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['-date'], name='bot_transac_date_78aa1f_idx')],
            },
        ),
    ]
